{"version":3,"file":"static/js/367.0808ff9f.chunk.js","mappings":"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","sources":["components/Navbar/Navbar.jsx","pages/Home/Home.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHouse } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../Layout/bootstrap.css\";\n\nfunction CustomBar() {\n  return (\n    <Navbar expand=\"lg\">\n      <Container>\n        <Navbar.Brand as={Link} to=\"/\">\n          <FontAwesomeIcon icon={faHouse} />\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link as={Link} to=\"/About\">\n              About\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/Jobs\">\n              Jobs\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/Occupations\">\n              Occupations\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/Courses\">\n              Courses\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/Locations\">\n              Locations\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/Clusters\">\n              Clusters\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/Contact\">\n              Contact\n            </Nav.Link>\n          </Nav>\n          <Form className=\"d-flex\">\n            <FormControl\n              type=\"search\"\n              placeholder=\"Search\"\n              className=\"me-2\"\n              aria-label=\"Search\"\n            />\n            <Button variant=\"outline-success\">Search</Button>\n          </Form>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default CustomBar;\n","import { useEffect, useRef, React } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport CustomBar from \"../../components/Navbar/Navbar\";\nimport \"./home.css\";\n\nconst sizes = [\n  {\n    width: \"10%\",\n    height: \"10%\",\n    left: \"0%\",\n    top: \"90%\",\n    zIndex: 6,\n  },\n  {\n    width: \"20%\",\n    height: \"10%\",\n    left: \"0%\",\n    top: \"90%\",\n    zIndex: 5,\n  },\n  {\n    width: \"40%\",\n    height: \"10%\",\n    left: \"0%\",\n    top: \"90%\",\n    zIndex: 4,\n  },\n  {\n    width: \"70%\",\n    height: \"10%\",\n    left: \"0%\",\n    top: \"90%\",\n    zIndex: 3,\n  },\n  {\n    width: \"100%\",\n    height: \"10%\",\n    left: \"0%\",\n    top: \"90%\",\n    zIndex: 2,\n  },\n];\n\nconst pages = [\n  { About: \"Learn more about our team and development.\" },\n  { Jobs: \"Find a job that fits your needs.\" },\n  { Occupations: \"Search by standardized job occupations.\" },\n  { Courses: \"Learn new skills and improve your current ones.\" },\n  {\n    Locations:\n      \"Find a job near you or explore what other cities have to offer.\",\n  },\n  { Clusters: \"Explore different clusters to find the right choice.\" },\n];\n\nfunction Home() {\n  // DOM elements states\n  const shapes = useRef();\n  const title = useRef();\n  const logo = useRef();\n  const clickBox = useRef();\n  const desc = useRef(null);\n  const clickedShape = useRef(null);\n  const navigate = useNavigate();\n\n  const clickOutside = (e) => {\n    if (!clickBox.current.contains(e.target) && clickedShape.current !== null) {\n      // if the clicked element is outside, reset the page to original state\n      title.current.innerHTML = \"\";\n      logo.current.style.display = \"block\";\n      desc.current = null;\n      clickedShape.current = null;\n      // set shapes to original state\n      Array.from(shapes.current).forEach((shape) => {\n        shape.classList.remove(\"clicked\");\n        shape.style.zIndex = 1;\n        // reset shape to original size\n        shape.style = \"\";\n        shape.children[0].style = \"\";\n        shape.children[0].innerHTML = shape.title;\n      });\n    }\n  };\n\n  // on render\n  useEffect(() => {\n    // checks if the click is outside the shapes\n    shapes.current = document.getElementsByClassName(\"shape\");\n    document.addEventListener(\"click\", clickOutside, true);\n    document.body.classList.add(\"home\");\n\n    // on unmount\n    return () => {\n      document.body.classList.remove(\"home\");\n      document.removeEventListener(\"click\", clickOutside, true);\n    };\n  }, []);\n\n  const checkShape = (e) => {\n    // if the target is the children, get the parent\n    if (e.target.className === \"shapeDescription\") {\n      e.target = e.target.parentElement;\n    }\n\n    if (clickedShape.current !== null) {\n      // remove clicked from previous clicked shape\n      clickedShape.current.classList.remove(\"clicked\");\n    }\n    // redirect to the clicked shapes title\n    if (clickedShape.current === e.target) {\n      // window.location.href = \"/\" + clickedShape.current.title;\n      navigate(`/${clickedShape.current.title}`);\n    }\n    clickedShape.current = e.target;\n\n    logo.current.style.display = \"none\";\n    desc.current = clickedShape.current.children[0];\n    // get dictionary of clicked shape\n    const clickedShapeDict = pages.find(\n      (page) => Object.keys(page)[0] === e.target.title\n    );\n\n    // set the title and description\n    // set description visible\n    desc.current.style.display = \"block\";\n    title.current.innerHTML = Object.keys(clickedShapeDict)[0];\n    desc.current.innerHTML = Object.values(clickedShapeDict)[0];\n\n    // set the shape to the largest size\n    clickedShape.current.classList.add(\"clicked\");\n\n    // loop through other shapes and hide the descr that are not clicked and set the size\n    let count = 0;\n    Array.from(shapes.current).forEach((shape) => {\n      if (shape !== clickedShape.current) {\n        shape.children[0].style.display = \"none\";\n        Object.keys(sizes[count]).forEach((key) => {\n          shape.style[key] = sizes[count][key];\n        });\n        count += 1;\n      }\n    });\n  };\n  return (\n    <>\n      <CustomBar />\n      <div id=\"container\">\n        <div id=\"box\" ref={clickBox}>\n          {pages.map((page, index) => (\n            <div\n              role=\"button\"\n              tabIndex={index}\n              className=\"shape hvr-reveal\"\n              title={Object.keys(page)[0]}\n              key={Object.keys(page)[0]}\n              onClick={checkShape}\n              onKeyUp={checkShape}\n            >\n              <div className=\"shapeDescription\">{Object.keys(page)[0]}</div>\n            </div>\n          ))}\n          <div id=\"logo-center\" ref={logo} />\n          <div id=\"shapeLabel\" ref={title} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n"],"names":["_jsx","Navbar","expand","children","_jsxs","Container","as","Link","to","FontAwesomeIcon","icon","faHouse","id","Nav","className","Form","FormControl","type","placeholder","Button","variant","sizes","width","height","left","top","zIndex","pages","About","Jobs","Occupations","Courses","Locations","Clusters","shapes","useRef","title","logo","clickBox","desc","clickedShape","navigate","useNavigate","clickOutside","e","current","contains","target","innerHTML","style","display","Array","from","forEach","shape","classList","remove","useEffect","document","getElementsByClassName","addEventListener","body","add","removeEventListener","checkShape","parentElement","concat","clickedShapeDict","find","page","Object","keys","values","count","key","_Fragment","CustomBar","ref","map","index","role","tabIndex","onClick","onKeyUp"],"sourceRoot":""}