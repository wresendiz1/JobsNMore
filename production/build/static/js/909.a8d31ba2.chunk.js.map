{"version":3,"file":"static/js/909.a8d31ba2.chunk.js","mappings":"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","sources":["pages/Courses/Courses.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { Container, Card, Button } from \"react-bootstrap\";\nimport MainLayout from \"../../components/Layout/MainLayout\";\nimport { Link } from \"react-router-dom\";\nimport PaginationBar from \"../../components/Pagination/Pagination\";\nimport { getPageData } from \"../../components/Pagination/PaginationHelper\";\nimport Sorting from \"../../components/Sorting/Sorting\";\n\nfunction Courses() {\n  const [page, setPage] = useState();\n  const [courses, setCourses] = useState();\n  const order = useRef();\n  const sort = useRef();\n  const items_per_page = useRef(50);\n\n  useEffect(() => {\n    fetch(\"/api/courses\")\n      .then((res) => res.json())\n      .then((data) => {\n        setCourses(data[\"Courses\"]);\n        setPage(data[\"Page\"]);\n        items_per_page.current.value = data[\"Page\"][0].per_page;\n        // console.log(data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const ChangePage = (action) => {\n    const url = `/api/courses?sort_by=${sort.current.value}&order=${order.current.value}&per_page=${items_per_page.current.value}&page=`;\n    getPageData(action, url, page).then((data) => {\n      setCourses(data.Courses);\n      setPage(data.Page);\n    });\n  };\n\n  const ShowPerPage = (items_per_page, e) => {\n    e.preventDefault();\n    {\n      // console.log(items_per_page.current.value)\n      fetch(\n        `/api/courses?page=1&sort_by=${sort.current.value}&order=${order.current.value}&per_page=${items_per_page.current.value}`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          setCourses(data[\"Courses\"]);\n          setPage(data[\"Page\"]);\n        });\n    }\n  };\n\n  const sortPage = (sort, order, e) => {\n    e.preventDefault();\n    fetch(\n      `/api/courses?page=${page[0].current_page}&per_page=${items_per_page.current.value}&sort_by=${sort.current.value}&order=${order.current.value}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setCourses(data[\"Courses\"]);\n        setPage(data[\"Page\"]);\n      });\n  };\n\n  const value_name = [\n    { id: \"Id\", name: \"Relevance\" },\n    { id: \"OnetCode\", name: \"Onet Code\" },\n    { id: \"Provider\", name: \"Provider\" },\n    { id: \"Name\", name: \"Name\" },\n    { id: \"Type\", name: \"Type\" },\n  ];\n  return (\n    <MainLayout>\n      {Courses && (\n        <Sorting\n          page_name={\"Courses\"}\n          page={page}\n          handler={sortPage}\n          value_name={value_name}\n          order={order}\n          sort={sort}\n          show_handler={ShowPerPage}\n          items_per_page={items_per_page}\n        />\n      )}\n\n      <Container className=\"d-flex flex-wrap justify-content-center\">\n        {courses &&\n          courses.map((course) => (\n            <Card key={course.Id} className=\"m-3\" style={{ width: \"18rem\" }}>\n              <Card.Body>\n                <Card.Title>{course.Name}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  {course.Type}\n                </Card.Subtitle>\n                {/* TODO: query occupation DB to get average pay or use google API in next phase */}\n                <Button\n                  variant=\"primary\"\n                  href={course.Url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  View Course\n                </Button>\n                <Link\n                  to={`/Courses/${course.Id}`}\n                  className=\"btn btn-primary mx-2\"\n                >\n                  More Info\n                </Link>\n              </Card.Body>\n            </Card>\n          ))}\n      </Container>\n      <Container className=\"d-flex flex-wrap justify-content-center\">\n        {courses && (\n          <PaginationBar\n            change={ChangePage}\n            total_pages={page[0].total}\n            current_page={page[0].current_page}\n          />\n        )}\n      </Container>\n    </MainLayout>\n  );\n}\n\nexport default Courses;\n"],"names":["Courses","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","courses","setCourses","order","useRef","sort","items_per_page","useEffect","fetch","then","res","json","data","current","value","per_page","catch","err","console","log","_jsxs","MainLayout","children","_jsx","Sorting","page_name","handler","e","preventDefault","concat","current_page","value_name","id","name","show_handler","Container","className","map","course","Card","style","width","Name","Type","Button","variant","href","Url","target","rel","Link","to","Id","PaginationBar","change","action","url","getPageData","Page","total_pages","total"],"sourceRoot":""}