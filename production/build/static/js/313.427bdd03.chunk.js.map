{"version":3,"file":"static/js/313.427bdd03.chunk.js","mappings":"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","sources":["pages/Jobs/ClusterJobs.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { getPageData } from \"../../components/Pagination/PaginationHelper\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport { Link, useParams } from \"react-router-dom\";\nimport MainLayout from \"../../components/Layout/MainLayout\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport PaginationBar from \"../../components/Pagination/Pagination\";\nimport Sorting from \"../../components/Sorting/Sorting\";\n\nfunction ClusterJobs() {\n  const { id } = useParams();\n  const [jobs, setJobs] = useState();\n  const [page, setPage] = useState();\n  const [cluster, setCluster] = useState();\n  const order = useRef();\n  const sort = useRef();\n  const items_per_page = useRef(50);\n\n  useEffect(() => {\n    fetch(`/api/jobs/cluster/${id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setJobs(data[\"Jobs\"]);\n        setPage(data[\"Page\"]);\n        setCluster(data[\"Cluster\"]);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const ChangePage = (action) => {\n    const url = `/api/jobs/cluster/${id}?sort_by=${sort.current.value}&order=${order.current.value}&per_page=${items_per_page.current.value}&page=`;\n    getPageData(action, url, page).then((data) => {\n      setJobs(data[\"Jobs\"]);\n      setPage(data[\"Page\"]);\n    });\n  };\n\n  const ShowPerPage = (items_per_page, e) => {\n    e.preventDefault();\n    {\n      // console.log(items_per_page.current.value)\n      fetch(\n        `/api/jobs/cluster/${id}?page=1&per_page=${items_per_page.current.value}&sort_by=${sort.current.value}&order=${order.current.value}`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          setJobs(data[\"Jobs\"]);\n          setPage(data[\"Page\"]);\n        });\n    }\n  };\n\n  const sortPage = (sort, order, e) => {\n    e.preventDefault();\n    fetch(\n      `/api/jobs/cluster/${id}?&per_page=${items_per_page.current.value}page=${page[0].current_page}&sort_by=${sort.current.value}&order=${order.current.value}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setJobs(data[\"Jobs\"]);\n        setPage(data[\"Page\"]);\n      });\n  };\n\n  const value_name = [\n    { id: \"Id\", name: \"Relevance\" },\n    { id: \"Company\", name: \"Company\" },\n    { id: \"DatePosted\", name: \"Date Posted\" },\n    { id: \"JCityID\", name: \"Job Location\" },\n    { id: \"OnetCode\", name: \"Occupation Code\" },\n    { id: \"JobTitle\", name: \"Job Title\" },\n  ];\n\n  return (\n    <MainLayout>\n      {page && (\n        <Sorting\n          page_name={\"Jobs in \" + cluster.Group}\n          page={page}\n          handler={sortPage}\n          value_name={value_name}\n          order={order}\n          sort={sort}\n          show_handler={ShowPerPage}\n          items_per_page={items_per_page}\n        />\n      )}\n      <Container className=\"d-flex flex-wrap justify-content-center\">\n        {jobs &&\n          jobs.map((job) => (\n            <Card key={job[\"Id\"]} className=\"m-3\" style={{ width: \"18rem\" }}>\n              <Card.Body>\n                <Card.Title>{job[\"JobTitle\"]}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  {job[\"Company\"]}\n                </Card.Subtitle>\n                {/* TODO: query occupation DB to get average pay or use google API in next phase */}\n                <Card.Text>{job[\"Location\"]}</Card.Text>\n                <Button\n                  variant=\"primary\"\n                  href={job[\"Url\"]}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  View Job\n                </Button>\n                <Link to={`/jobs/${job.Id}`} className=\"btn btn-primary mx-2\">\n                  More Info\n                </Link>\n              </Card.Body>\n            </Card>\n          ))}\n      </Container>\n      <Container className=\"d-flex flex-wrap justify-content-center\">\n        {jobs && (\n          <PaginationBar\n            change={ChangePage}\n            total_pages={page[0].total}\n            current_page={page[0].current_page}\n          />\n        )}\n      </Container>\n    </MainLayout>\n  );\n}\n\nexport default ClusterJobs;\n"],"names":["id","useParams","_useState","useState","_useState2","_slicedToArray","jobs","setJobs","_useState3","_useState4","page","setPage","_useState5","_useState6","cluster","setCluster","order","useRef","sort","items_per_page","useEffect","fetch","concat","then","res","json","data","catch","err","console","log","_jsxs","MainLayout","children","_jsx","Sorting","page_name","Group","handler","e","preventDefault","current","value","current_page","value_name","name","show_handler","Container","className","map","job","Card","style","width","Button","variant","href","target","rel","Link","to","Id","PaginationBar","change","action","url","getPageData","total_pages","total"],"sourceRoot":""}