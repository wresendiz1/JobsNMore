{"version":3,"file":"static/js/322.0bf028f0.chunk.js","mappings":"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","sources":["pages/Jobs/CourseJobs.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport { Link, useParams, useSearchParams } from \"react-router-dom\";\nimport MainLayout from \"../../components/Layout/MainLayout\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport PaginationBar from \"../../components/Pagination/Pagination\";\nimport { getPageData } from \"../../components/Pagination/PaginationHelper\";\nimport Sorting from \"../../components/Sorting/Sorting\";\n\nfunction CourseJobs() {\n  const { id } = useParams();\n  const [jobs, setJobs] = useState();\n  const [page, setPage] = useState();\n  const order = useRef();\n  const sort = useRef();\n  const [course, setCourse] = useState();\n  const [search] = useSearchParams();\n  const items_per_page = useRef(50);\n\n  useEffect(() => {\n    setCourse(search.get(\"course\"));\n    // const urls = [`/api/jobs/course/${id}?sort_by=${sort.current.value}&order=${order.current.value}&page=`,\n    //               `/api/courses/${course}`];\n    fetch(`/api/jobs/course/${id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setJobs(data[\"Jobs\"]);\n        setPage(data[\"Page\"]);\n      })\n      .catch((err) => console.log(err));\n\n    // Promise.all(urls.map(url => fetch(url)))\n    // .then(responses => Promise.all(responses.map(res => res.json())))\n    // .then(data => {\n    //   setJobs(data[0][\"Jobs\"]);\n    //   setPage(data[0][\"Page\"]);\n    //   setCourse(data[1]);\n    // })\n  }, []);\n\n  const ChangePage = (action) => {\n    const url = `/api/jobs/course/${id}?sort_by=${sort.current.value}&order=${order.current.value}&per_page=${items_per_page.current.value}&page=`;\n    getPageData(action, url, page).then((data) => {\n      setJobs(data[\"Jobs\"]);\n      setPage(data[\"Page\"]);\n    });\n  };\n\n  const ShowPerPage = (items_per_page, e) => {\n    e.preventDefault();\n    {\n      // console.log(items_per_page.current.value)\n      fetch(\n        `/api/jobs/course/${id}?page=1&sort_by=${sort.current.value}&order=${order.current.value}&per_page=${items_per_page.current.value}`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          setJobs(data[\"Jobs\"]);\n          setPage(data[\"Page\"]);\n        });\n    }\n  };\n\n  const sortPage = (sort, order, e) => {\n    e.preventDefault();\n    fetch(\n      `/api/jobs/course/${id}?page=${page[0].current_page}&per_page=${items_per_page.current.value}&sort_by=${sort.current.value}&order=${order.current.value}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setJobs(data[\"Jobs\"]);\n        setPage(data[\"Page\"]);\n      });\n  };\n  const value_name = [\n    { id: \"Id\", name: \"Relevance\" },\n    { id: \"Company\", name: \"Company\" },\n    { id: \"DatePosted\", name: \"Date Posted\" },\n    { id: \"JCityID\", name: \"Job Location\" },\n    { id: \"OnetCode\", name: \"Occupation Code\" },\n    { id: \"JobTitle\", name: \"Job Title\" },\n  ];\n  return (\n    <MainLayout>\n      {page && (\n        <Sorting\n          page_name={\n            \"Jobs where course, \" +\n            course +\n            \", can elevate your chances of getting the job\"\n          }\n          page={page}\n          handler={sortPage}\n          value_name={value_name}\n          order={order}\n          sort={sort}\n          show_handler={ShowPerPage}\n          items_per_page={items_per_page}\n        />\n      )}\n      <Container className=\"d-flex flex-wrap justify-content-center\">\n        {page &&\n          jobs.map((job) => (\n            <Card key={job[\"Id\"]} className=\"m-3\" style={{ width: \"18rem\" }}>\n              <Card.Body>\n                <Card.Title>{job[\"JobTitle\"]}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  {job[\"Company\"]}\n                </Card.Subtitle>\n                {/* TODO: query occupation DB to get average pay or use google API in next phase */}\n                <Card.Text>{job[\"Location\"]}</Card.Text>\n                <Button\n                  variant=\"primary\"\n                  href={job[\"Url\"]}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  View Job\n                </Button>\n                <Link to={`/jobs/${job.Id}`} className=\"btn btn-primary mx-2\">\n                  More Info\n                </Link>\n              </Card.Body>\n            </Card>\n          ))}\n      </Container>\n      <Container className=\"d-flex flex-wrap justify-content-center\">\n        {page && (\n          <PaginationBar\n            change={ChangePage}\n            total_pages={page[0].total}\n            current_page={page[0].current_page}\n          />\n        )}\n      </Container>\n    </MainLayout>\n  );\n}\n\nexport default CourseJobs;\n"],"names":["id","useParams","_useState","useState","_useState2","_slicedToArray","jobs","setJobs","_useState3","_useState4","page","setPage","order","useRef","sort","_useState5","_useState6","course","setCourse","_useSearchParams","useSearchParams","search","items_per_page","useEffect","get","fetch","concat","then","res","json","data","catch","err","console","log","_jsxs","MainLayout","children","_jsx","Sorting","page_name","handler","e","preventDefault","current_page","current","value","value_name","name","show_handler","Container","className","map","job","Card","style","width","Button","variant","href","target","rel","Link","to","Id","PaginationBar","change","action","url","getPageData","total_pages","total"],"sourceRoot":""}