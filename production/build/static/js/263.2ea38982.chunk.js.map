{"version":3,"file":"static/js/263.2ea38982.chunk.js","mappings":"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","sources":["pages/Jobs/OnetJobs.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport { Link, useParams } from \"react-router-dom\";\nimport MainLayout from \"../../components/Layout/MainLayout\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport PaginationBar from \"../../components/Pagination/Pagination\";\nimport { getPageData } from \"../../components/Pagination/PaginationHelper\";\nimport Sorting from \"../../components/Sorting/Sorting\";\n\nfunction OnetJobs() {\n  const [page, setPage] = useState();\n  const [jobs, setJobs] = useState();\n  const { id } = useParams();\n  const order = useRef();\n  const sort = useRef();\n  const items_per_page = useRef(50);\n\n  useEffect(() => {\n    fetch(`/api/jobs/onet/${id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setJobs(data[\"Jobs\"]);\n        setPage(data[\"Page\"]);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const ChangePage = (action) => {\n    const url = `/api/jobs/onet/${id}?sort_by=${sort.current.value}&order=${order.current.value}&per_page=${items_per_page.current.value}&page=`;\n    getPageData(action, url, page).then((data) => {\n      setJobs(data[\"Jobs\"]);\n      setPage(data[\"Page\"]);\n    });\n  };\n\n  const ShowPerPage = (items_per_page, e) => {\n    e.preventDefault();\n    {\n      // console.log(items_per_page.current.value)\n      fetch(\n        `/api/jobs/onet/${id}?page=1&sort_by=${sort.current.value}&order=${order.current.value}&per_page=${items_per_page.current.value}`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          setJobs(data[\"Jobs\"]);\n          setPage(data[\"Page\"]);\n        });\n    }\n  };\n\n  const sortPage = (sort, order, e) => {\n    e.preventDefault();\n    fetch(\n      `/api/jobs/onet/${id}?page=${page[0].current_page}&per_page=${items_per_page.current.value}&sort_by=${sort.current.value}&order=${order.current.value}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setJobs(data[\"Jobs\"]);\n        setPage(data[\"Page\"]);\n      });\n  };\n\n  const value_name = [\n    { id: \"Id\", name: \"Relevance\" },\n    { id: \"Company\", name: \"Company\" },\n    { id: \"DatePosted\", name: \"Date Posted\" },\n    { id: \"JCityID\", name: \"Job Location\" },\n    { id: \"JobTitle\", name: \"Job Title\" },\n  ];\n\n  return (\n    <MainLayout>\n      {/* <h1 className=\"text-center py-5\">Jobs from ONET code: {id} </h1> */}\n      {page && (\n        <Sorting\n          page_name={\"Jobs\"}\n          page={page}\n          handler={sortPage}\n          value_name={value_name}\n          order={order}\n          sort={sort}\n          show_handler={ShowPerPage}\n          items_per_page={items_per_page}\n        />\n      )}\n\n      <Container className=\"d-flex flex-wrap justify-content-center\">\n        {jobs &&\n          jobs.map((job) => (\n            <Card key={job[\"Id\"]} className=\"m-3\" style={{ width: \"18rem\" }}>\n              <Card.Body>\n                <Card.Title>{job[\"JobTitle\"]}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  {job[\"Company\"]}\n                </Card.Subtitle>\n                {/* TODO: query occupation DB to get average pay or use google API in next phase */}\n                <Card.Text>{job[\"Location\"]}</Card.Text>\n                <Button\n                  variant=\"primary\"\n                  href={job[\"Url\"]}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  View Job\n                </Button>\n                <Link to={`/jobs/${job.Id}`} className=\"btn btn-primary mx-2\">\n                  More Info\n                </Link>\n              </Card.Body>\n            </Card>\n          ))}\n      </Container>\n      <Container className=\"d-flex flex-wrap justify-content-center\">\n        {jobs && (\n          <PaginationBar\n            change={ChangePage}\n            total_pages={page[0].total}\n            current_page={page[0].current_page}\n          />\n        )}\n      </Container>\n    </MainLayout>\n  );\n}\n\nexport default OnetJobs;\n"],"names":["_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","jobs","setJobs","id","useParams","order","useRef","sort","items_per_page","useEffect","fetch","concat","then","res","json","data","catch","err","console","log","_jsxs","MainLayout","children","_jsx","Sorting","page_name","handler","e","preventDefault","current_page","current","value","value_name","name","show_handler","Container","className","map","job","Card","style","width","Button","variant","href","target","rel","Link","to","Id","PaginationBar","change","action","url","getPageData","total_pages","total"],"sourceRoot":""}